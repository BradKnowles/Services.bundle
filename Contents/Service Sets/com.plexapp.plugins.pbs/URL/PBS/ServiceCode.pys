RE_VIDEO_ID = Regex("id: '(\d+)'")
RE_VIDEO_URL = Regex("recommended_encoding.*'url': '([^']+)'", Regex.DOTALL)

PLAYER_URL = 'http://player.pbs.org/portalplayer/%s/'

####################################################################################################
def NormalizeURL(url):

    return url

####################################################################################################
def MetadataObjectForURL(url):

    html = HTML.ElementFromURL(url)

    title = html.xpath('//meta[@property="og:title"]/@content')[0].split(' | ')[0]
    summary = html.xpath('//meta[@property="og:description"]/@content')[0]
    thumb = html.xpath('//meta[@property="og:image"]/@content')[0]

    try:
        airdate = html.xpath('//p[contains(., "Aired:")]/text()')[0].split('Aired:')[-1].strip()
        airdate = Datetime.ParseDate(airdate).date()
    except:
        airdate = None

    return VideoClipObject(
        title = title,
        summary = summary,
        originally_available_at = airdate,
        thumb = Resource.ContentsOfURLWithFallback(url=thumb)
    )

####################################################################################################
def MediaObjectsForURL(url):

    return [
        MediaObject(
            audio_channels = 2,
            optimized_for_streaming = True,
            video_resolution = 'sd',
            parts = [
                PartObject(key=HTTPLiveStreamURL(Callback(PlayVideo, url=url)))
            ]
        )
    ]

####################################################################################################
@indirect
def PlayVideo(url, **kwargs):

    page = HTTP.Request(url).content
    video_id = RE_VIDEO_ID.search(page).group(1)

    page = HTTP.Request(PLAYER_URL % (video_id)).content
    redirect_url = RE_VIDEO_URL.search(page).group(1)

    json_obj = JSON.ObjectFromURL('%s?format=json' % (redirect_url))

    if 'status' in json_obj and json_obj['status'] == 'ok':
        return IndirectResponse(VideoClipObject, key=json_obj['url'])
    else:
        raise Ex.MediaNotAvailable
